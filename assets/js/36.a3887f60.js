(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{443:function(t,s,a){"use strict";a.r(s);var n=a(2),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一、正则表达式介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、正则表达式介绍"}},[t._v("#")]),t._v(" 一、正则表达式介绍")]),t._v(" "),s("p",[t._v("正则表达式（regular expression）是一种工具，一种广泛用于匹配字符串的工具。")]),t._v(" "),s("h3",{attrs:{id:"使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[t._v("#")]),t._v(" 使用场景")]),t._v(" "),s("p",[t._v("考虑下面的几个场景：")]),t._v(" "),s("ul",[s("li",[t._v("你要搜索一个文件，这个文件里包含了单词‘nginx’（不区分字母大小写），但你并不想把包含着字符串‘nginx’的其他单词（比如nginxpulus、nginxservice等）也找出来。")]),t._v(" "),s("li",[t._v("你的WEB服务器接收从表单发送过来的用户邮箱地址信息。你")]),t._v(" "),s("li",[t._v("你正在编辑一段源代码并且要把所有的‘size’都替换为‘isize’，但这种替换仅仅限于‘size’单词本身，而不涉及那些包含着字符串‘size’的其他单词。")]),t._v(" "),s("li",[t._v("你需要在文件里搜索某个特定的文本，但你只想把出现在特定位置的，比如每行的开头或是结尾的找出来。 有点类似 VIM编辑器里面操作")])]),t._v(" "),s("h3",{attrs:{id:"特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),s("ul",[s("li",[t._v("正则表达式本质上是一门语言，它不从属与Python！Python只是将他人写好的正则引擎集成到了语言内部，其他语言也是这么干的（java、shell、php等）")]),t._v(" "),s("li",[t._v("正则表达式诞生的时间很长，应用非常广泛，是业界公认的字符串匹配工具。虽然有不同版本的内部引擎，但基本通用，也就是说，你在Python内写的正则表达式，可以移植到Linux的shell，Java语言等任何支持正则的场景中去。")]),t._v(" "),s("li",[t._v("正则表达式默认从左往右匹配。")]),t._v(" "),s("li",[t._v("正则表达式默认是贪婪模式（后面讲）。")]),t._v(" "),s("li",[t._v("正则表达式默认在匹配到了内容后，则终止匹配，不继续匹配。")]),t._v(" "),s("li",[t._v("对同一个问题，编写的正则表达式不是唯一的！")])]),t._v(" "),s("h2",{attrs:{id:"二、正则表达式语法介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、正则表达式语法介绍"}},[t._v("#")]),t._v(" 二、正则表达式语法介绍")]),t._v(" "),s("blockquote",[s("p",[t._v("所有的字符 都是英文半角，千万别使用中文字符")])]),t._v(" "),s("h3",{attrs:{id:"普通字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#普通字符"}},[t._v("#")]),t._v(" 普通字符")]),t._v(" "),s("p",[t._v('字母、数字、汉字、下划线、以及没有特殊定义的符号，都是"普通字符"。正则表达式中的普通字符，在匹配的时候，只匹配与自身相同的一个字符。')]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("表达式c，在匹配字符串abcde时，匹配结果是：成功；匹配到的内容是c；")])]),t._v(" "),s("li",[s("p",[t._v("匹配到的位置开始于2，结束于3。")])])]),t._v(" "),s("blockquote",[s("p",[t._v("注：下标从0开始还是从1开始，因当前编程语言的不同而可能不同）")])]),t._v(" "),s("h3",{attrs:{id:"元字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元字符"}},[t._v("#")]),t._v(" 元字符")]),t._v(" "),s("p",[t._v("正则表达式中使用了很多元字符，用来表示一些特殊的含义或功能。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("表达式")]),t._v(" "),s("th",[t._v("匹配")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v(".")]),t._v(" "),s("td",[t._v("小数点可以匹配除了换行符\\n以外的任意一个字符")])]),t._v(" "),s("tr",[s("td",[t._v("|")]),t._v(" "),s("td",[t._v("逻辑或操作符")])]),t._v(" "),s("tr",[s("td",[t._v("[]")]),t._v(" "),s("td",[t._v("匹配字符集中的一个字符")])]),t._v(" "),s("tr",[s("td",[t._v("[^]")]),t._v(" "),s("td",[t._v("对字符集求反，也就是上面的反操作。尖号必须在方括号里的最前面")])]),t._v(" "),s("tr",[s("td",[t._v("-")]),t._v(" "),s("td",[t._v("定义[]里的一个字符区间，例如[a-z]")])]),t._v(" "),s("tr",[s("td",[t._v("\\")]),t._v(" "),s("td",[t._v("对紧跟其后的一个字符进行转义")])]),t._v(" "),s("tr",[s("td",[t._v("()")]),t._v(" "),s("td",[t._v("对表达式进行分组，将圆括号内的内容当做一个整体，并获得匹配的值")])])])]),t._v(" "),s("p",[t._v("对表达式进行分组，将圆括号内的内容当做一个整体，并获得匹配的值")]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("表达式")]),t._v(" "),s("th",[t._v("对应匹配出的数据")]),t._v(" "),s("th",[t._v("备注")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("a.c")])]),t._v(" "),s("td",[s("code",[t._v("abc")])]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("code",[t._v("(a|b)c")])]),t._v(" "),s("td",[s("code",[t._v("ac")]),t._v("与"),s("code",[t._v("bc")])]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("code",[t._v("[abc]1")])]),t._v(" "),s("td",[t._v("a1或者b1或者c1")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("[ab5@]")]),t._v(" "),s("td",[t._v("a或b或5或@")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("[^abc]")]),t._v(" "),s("td",[t._v("除了"),s("code",[t._v("a,b,c")]),t._v("之外的任意一个字符")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("[f-k]")]),t._v(" "),s("td",[t._v("f~k 之间的任意一个字母")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("[^A-F0-3]")]),t._v(" "),s("td",[t._v("A~F以及0~3之外的任意一个字符")]),t._v(" "),s("td")])])]),t._v(" "),s("h3",{attrs:{id:"转义字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转义字符"}},[t._v("#")]),t._v(" 转义字符")]),t._v(" "),s("p",[t._v('一些无法书写或者具有特殊功能的字符，采用在前面加斜杠""进行转义的方法。例如下表所示：')]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("表达式")]),t._v(" "),s("th",[t._v("匹配")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("\\r, \\n")]),t._v(" "),s("td",[t._v("匹配回车和换行符")])]),t._v(" "),s("tr",[s("td",[t._v("\\t")]),t._v(" "),s("td",[t._v("匹配制表符")])]),t._v(" "),s("tr",[s("td",[t._v("\\")]),t._v(" "),s("td",[t._v("匹配斜杠\\")])]),t._v(" "),s("tr",[s("td",[t._v("^")]),t._v(" "),s("td",[t._v("匹配^符号")])]),t._v(" "),s("tr",[s("td",[t._v("$")]),t._v(" "),s("td",[t._v("匹配$符号")])]),t._v(" "),s("tr",[s("td",[t._v(".")]),t._v(" "),s("td",[t._v("匹配小数点.")])])])]),t._v(" "),s("p",[t._v("尚未列出的还有问号？、星号*和括号等其他的符号。\n所有正则表达式中具有特殊含义的字符在匹配自身的时候，都要使用斜杠进行转义。\n这些转义字符的匹配方法与普通字符类似，也是匹配与之相同的一个字符。")]),t._v(" "),s("p",[t._v("例如:")]),t._v(" "),s("ul",[s("li",[s("p",[t._v('表达式$d，在匹配字符串"abc$de"时，匹配结果是：成功；匹配到的内容是$d')])]),t._v(" "),s("li",[s("p",[t._v("匹配到的位置开始于3，结束于5。")])])]),t._v(" "),s("h3",{attrs:{id:"预定义匹配字符集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预定义匹配字符集"}},[t._v("#")]),t._v(" 预定义匹配字符集")]),t._v(" "),s("p",[t._v("正则表达式中的一些表示方法，可以同时匹配某个预定义字符集中的任意一个字符。比如，表达式\\d可以匹配任意一个数字。虽然可以匹配其中任意字符，但是只能是一个，不是多个。如下表所示，注意大小写：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("表达式")]),t._v(" "),s("th",[t._v("匹配")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("\\d")]),t._v(" "),s("td",[t._v("任意一个数字，0~9 中的任意一个")])]),t._v(" "),s("tr",[s("td",[t._v("\\w")]),t._v(" "),s("td",[t._v("任意一个字母或数字或下划线，也就是 A~Z,a~z,0~9,_ 中的任意一个")])]),t._v(" "),s("tr",[s("td",[t._v("\\s")]),t._v(" "),s("td",[t._v("空格、制表符、换页符等空白字符的其中任意一个")])]),t._v(" "),s("tr",[s("td",[t._v("\\D")]),t._v(" "),s("td",[t._v("\\d的反集，也就是非数字的任意一个字符，等同于[^\\d]")])]),t._v(" "),s("tr",[s("td",[t._v("\\W")]),t._v(" "),s("td",[t._v("\\w的反集，也就是[^\\w]")])]),t._v(" "),s("tr",[s("td",[t._v("\\S")]),t._v(" "),s("td",[t._v("\\s的反集，也就是[^\\s]")])])])]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("ul",[s("li",[t._v("表达式\\d\\d，在匹配abc123时，匹配的结果是：成功；匹配到的内容是12")]),t._v(" "),s("li",[t._v("匹配到的位置开始于3，结束于5。")])]),t._v(" "),s("h3",{attrs:{id:"重复匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重复匹配"}},[t._v("#")]),t._v(" 重复匹配")]),t._v(" "),s("p",[t._v("前面的表达式，无论是只能匹配一种字符的表达式，还是可以匹配多种字符其中任意一个的表达式，都只能匹配一次。但是有时候我们需要对某个片段进行重复匹配，例如手机号码13666666666，一般的新手可能会写成\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d（注意，这不是一个恰当的表达式），不但写着费劲，看着也累，还不一定准确恰当。\n这种情况可以使用表达式再加上修饰匹配次数的特殊符号{}，不用重复书写表达式就可以重复匹配。比如[abcd][abcd]可以写成[abcd]{2}。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("表达式")]),t._v(" "),s("th",[t._v("匹配")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("{n}")]),t._v(" "),s("td",[t._v("表达式重复n次，比如\\d{2}相当于\\d\\d,a{3}相当于aaa")])]),t._v(" "),s("tr",[s("td",[t._v("{m,n}")]),t._v(" "),s("td",[t._v("表达式至少重复m次，最多重复n次。比如ab{1,3}可以匹配ab或abb或abbb")])]),t._v(" "),s("tr",[s("td",[t._v("{m,}")]),t._v(" "),s("td",[t._v("表达式至少重复m次，比如\\w\\d{2,}可以匹配a12,_1111,M123等等")])]),t._v(" "),s("tr",[s("td",[t._v("?")]),t._v(" "),s("td",[t._v("匹配表达式0次或者1次，相当于{0,1}，比如a[cd]?可以匹配a,ac,ad")])]),t._v(" "),s("tr",[s("td",[t._v("+")]),t._v(" "),s("td",[t._v("表达式至少出现1次，相当于{1,}，比如a+b可以匹配ab,aab,aaab等等")])]),t._v(" "),s("tr",[s("td",[t._v("*")]),t._v(" "),s("td",[t._v("表达式出现0次到任意次，相当于{0,}，比如^*b可以匹配b,^^^b等等")])])])]),t._v(" "),s("p",[t._v("其中有些例子一定要注意！比如ab{1,3}中重复的是b而不是ab，(ab){1,3}这样重复的才是ab。")]),t._v(" "),s("p",[t._v("表达式^*b中重复的是^而不是^，要从左往右读正则表达式，转义符号有更高的优先级，需要和后面的字符整体认读。")]),t._v(" "),s("p",[t._v("表达式\\d+.?\\d*在匹配It costs $12.5时，匹配的结果是：成功；匹配到的内容是12.5；匹配到的位置开始于10，结束于14。")]),t._v(" "),s("p",[t._v("表达式go{2,8}gle在匹配Ads by goooooogle时，匹配的结果是：成功；匹配到的内容是goooooogle；匹配到的位置开始于7，结束于17。")]),t._v(" "),s("h3",{attrs:{id:"位置匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#位置匹配"}},[t._v("#")]),t._v(" 位置匹配")]),t._v(" "),s("p",[t._v("有时候，我们对匹配出现的位置有要求，比如开头、结尾、单词之间等等。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("表达式")]),t._v(" "),s("th",[t._v("匹配")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("^")]),t._v(" "),s("td",[t._v("在字符串开始的地方匹配，符号本身不匹配任何字符")])]),t._v(" "),s("tr",[s("td",[t._v("$")]),t._v(" "),s("td",[t._v("在字符串结束的地方匹配，符号本身不匹配任何字符")])]),t._v(" "),s("tr",[s("td",[t._v("\\b")]),t._v(" "),s("td",[t._v("匹配一个单词边界，也就是单词和空格之间的位置，符号本身不匹配任何字符")])]),t._v(" "),s("tr",[s("td",[t._v("\\B")]),t._v(" "),s("td",[t._v("匹配非单词边界，即左右两边都是\\w范围或者左右两边都不是\\w范围时的字符缝隙")])])])]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("ul",[s("li",[t._v("表达式"),s("code",[t._v("^aaa")]),t._v("在匹配"),s("code",[t._v("xxx aaa xxx")]),t._v("时，匹配结果是：失败。因为^要求在字符串开始的地方匹配。")]),t._v(" "),s("li",[t._v("表达式"),s("code",[t._v("aaa$")]),t._v("在匹配"),s("code",[t._v("xxx aaa xxx")]),t._v("时，匹配结果是：失败。因为$要求在字符串结束的地方匹配。")]),t._v(" "),s("li",[t._v("表达式"),s("code",[t._v(".\\b.")]),t._v("在匹配"),s("code",[t._v("@@@abc")]),t._v("时，匹配结果是：成功；匹配到的内容是@a；匹配到的位置开始于2，结束于4。")]),t._v(" "),s("li",[t._v("表达式"),s("code",[t._v("\\bend\\b")]),t._v("在匹配"),s("code",[t._v("weekend,endfor,end")]),t._v("时，匹配结果是：成功；匹配到的内容是end；匹配到的位置开始于15，结束于18。")])]),t._v(" "),s("h3",{attrs:{id:"贪婪与非贪婪模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#贪婪与非贪婪模式"}},[t._v("#")]),t._v(" 贪婪与非贪婪模式")]),t._v(" "),s("p",[t._v("在重复匹配时，正则表达式默认总是尽可能多的匹配，这被称为贪婪模式。比如，针对文本dxxxdxxxd，表达式(d)(\\w+)(d)中的\\w+将匹配第一个d和最后一个d之间的所有字符xxxdxxx。可见，\\w+在匹配的时候，总是尽可能多的匹配符合它规则的字符。同理，带有?、*和{m,n}的重复匹配表达式都是尽可能地多匹配。\n但是有时候，这种模式不是我们想要的结果，比如最常见的HTML标签匹配。假设有如下的字符串：")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("table")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("tr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("td")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("liuwq"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("td")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("td")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("liuwenqi"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("td")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("td")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("qianfeng"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("td")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("tr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("table")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("我们的意图是获取每个")]),s("td"),t._v("标签中的元素内容，那么如果你将正则表达式写成"),s("td",[t._v("(."),s("em",[t._v(")")])]),t._v("的话，你得到的是"),s("td",[t._v("liuwenqi")]),s("td",[t._v("liuwq")]),s("td",[t._v("qianfeng")]),t._v('这么个东西，而不是“苹果”、“桃子”、“香蕉”。\n那么怎么办呢？使用非贪婪模式！\n在修饰匹配次数的特殊符号后再加上一个?问号，则可以使匹配次数不定的表达式尽可能少的匹配，使可匹配可不匹配的表达式，尽可能的"不匹配"。如果少匹配就会导致整个表达式匹配失败的时候，与贪婪模式类似，非贪婪模式会最小限度的再多匹配一些，以使整个表达式匹配成功。\n表达式'),s("td",[t._v("(."),t._v("?)")]),t._v("匹配上面的字符串时，将只得到"),s("td",[t._v("liuwq")]),t._v("，再次匹配下一个时，可以得到"),s("td",[t._v("liuwenqi")]),t._v('，以此类推。\n针对文本"dxxxdxxxd"举例：\n表达式(d)(\\w+?)中的\\w+?将尽可能少的匹配第一个d之后的字符，结果是只匹配了一个"x"，整体只匹配了dx。\n表达式(d)(\\w+?)(d)为了让整个表达式匹配成功，\\w+?不得不匹配xxx才可以让后边的d匹配，从而使整个表达式匹配成功。因此，结果是\\w+?匹配了xxx，整体匹配了dxxx。'),s("p"),t._v(" "),s("h3",{attrs:{id:"常用正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用正则表达式"}},[t._v("#")]),t._v(" 常用正则表达式")]),t._v(" "),s("p",[t._v("下面是网络上收集的一些常用正则表达式，请参考使用。 PS:各位在复制粘贴的时候务必要小心前后多余的空格！\n校验数字的相关表达式：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("功能")]),t._v(" "),s("th",[t._v("表达式")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("数字")]),t._v(" "),s("td",[t._v("^[0-9]*$")])]),t._v(" "),s("tr",[s("td",[t._v("n位的数字")]),t._v(" "),s("td",[t._v("^\\d{n}$")])]),t._v(" "),s("tr",[s("td",[t._v("至少n位的数字")]),t._v(" "),s("td",[t._v("^\\d{n,}$")])]),t._v(" "),s("tr",[s("td",[t._v("m-n位的数字")]),t._v(" "),s("td",[t._v("^\\d{m,n}$")])]),t._v(" "),s("tr",[s("td",[t._v("零和非零开头的数字")]),t._v(" "),s("td",[t._v("^(0|[1-9][0-9]*)$")])]),t._v(" "),s("tr",[s("td",[t._v("非零开头的最多带两位小数的数字")]),t._v(" "),s("td",[t._v("^([1-9][0-9]*)+(.[0-9]{1,2})?$")])]),t._v(" "),s("tr",[s("td",[t._v("带1-2位小数的正数或负数")]),t._v(" "),s("td",[t._v("^(-)?\\d+(.\\d{1,2})?$")])]),t._v(" "),s("tr",[s("td",[t._v("正数、负数、和小数")]),t._v(" "),s("td",[t._v("^(-|+)?\\d+(.\\d+)?$")])]),t._v(" "),s("tr",[s("td",[t._v("有两位小数的正实数")]),t._v(" "),s("td",[t._v("^[0-9]+(.[0-9]{2})?$")])]),t._v(" "),s("tr",[s("td",[t._v("有1~3位小数的正实数")]),t._v(" "),s("td",[t._v("^[0-9]+(.[0-9]{1,3})?$")])]),t._v(" "),s("tr",[s("td",[t._v("非零的正整数")]),t._v(" "),s("td",[t._v("^[1-9]\\d*$")])]),t._v(" "),s("tr",[s("td",[t._v("非零的负整数")]),t._v(" "),s("td",[t._v("^-[1-9]\\d*$")])]),t._v(" "),s("tr",[s("td",[t._v("非负整数")]),t._v(" "),s("td",[t._v("^\\d+$")])]),t._v(" "),s("tr",[s("td",[t._v("非正整数")]),t._v(" "),s("td",[t._v("^-[1-9]\\d*|0$")])]),t._v(" "),s("tr",[s("td",[t._v("非负浮点数")]),t._v(" "),s("td",[t._v("^\\d+(.\\d+)?$")])]),t._v(" "),s("tr",[s("td",[t._v("非正浮点数")]),t._v(" "),s("td",[t._v("^((-\\d+(.\\d+)?)|(0+(.0+)?))$")])]),t._v(" "),s("tr",[s("td",[t._v("正浮点数")]),t._v(" "),s("td",[t._v("^[1-9]\\d*.\\d*|0.\\d*[1-9]\\d*$")])]),t._v(" "),s("tr",[s("td",[t._v("负浮点数")]),t._v(" "),s("td",[t._v("^-([1-9]\\d*.\\d*|0.\\d*[1-9]\\d*)$")])]),t._v(" "),s("tr",[s("td",[t._v("浮点数")]),t._v(" "),s("td",[t._v("^(-?\\d+)(.\\d+)?$")])])])]),t._v(" "),s("p",[t._v("校验字符的相关表达式：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("功能")]),t._v(" "),s("th",[t._v("表达式")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("汉字")]),t._v(" "),s("td",[t._v("^[\\u4e00-\\u9fa5]{0,}$")])]),t._v(" "),s("tr",[s("td",[t._v("英文和数字")]),t._v(" "),s("td",[t._v("^[A-Za-z0-9]+$")])]),t._v(" "),s("tr",[s("td",[t._v("长度为3-20的所有字符")]),t._v(" "),s("td",[t._v("^.{3,20}$")])]),t._v(" "),s("tr",[s("td",[t._v("由26个英文字母组成的字符串")]),t._v(" "),s("td",[t._v("^[A-Za-z]+$")])]),t._v(" "),s("tr",[s("td",[t._v("由26个大写英文字母组成的字符串")]),t._v(" "),s("td",[t._v("^[A-Z]+$")])]),t._v(" "),s("tr",[s("td",[t._v("由26个小写英文字母组成的字符串")]),t._v(" "),s("td",[t._v("^[a-z]+$")])]),t._v(" "),s("tr",[s("td",[t._v("由数字和26个英文字母组成的字符串")]),t._v(" "),s("td",[t._v("^[A-Za-z0-9]+$")])]),t._v(" "),s("tr",[s("td",[t._v("由数字、26个英文字母或者下划线组成的字符串")]),t._v(" "),s("td",[t._v("^\\w+$")])]),t._v(" "),s("tr",[s("td",[t._v("中文、英文、数字包括下划线")]),t._v(" "),s("td",[t._v("^[\\u4E00-\\u9FA5A-Za-z0-9_]+$")])]),t._v(" "),s("tr",[s("td",[t._v("中文、英文、数字但不包括下划线等符号")]),t._v(" "),s("td",[t._v("^[\\u4E00-\\u9FA5A-Za-z0-9]+$")])]),t._v(" "),s("tr",[s("td",[t._v("可以输入含有^%&’,;=?$\\”等字符")]),t._v(" "),s("td",[t._v("[^%&’,;=?$\\x22]+")])]),t._v(" "),s("tr",[s("td",[t._v("禁止输入含有~的字符")]),t._v(" "),s("td",[t._v("[^~\\x22]+")])])])]),t._v(" "),s("p",[t._v("特殊场景的表达式:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("功能")]),t._v(" "),s("th",[t._v("表达式")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Email地址")]),t._v(" "),s("td",[t._v("^\\w+([-+.]\\w+)"),s("em",[t._v("@\\w+([-.]\\w+)")]),t._v(".\\w+([-.]\\w+)*$")])]),t._v(" "),s("tr",[s("td",[t._v("域名")]),t._v(" "),s("td",[t._v("[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.?")])]),t._v(" "),s("tr",[s("td",[t._v("InternetURL")]),t._v(" "),s("td",[t._v("[a-zA-z]+://[^\\s]* 或 ^http://([\\w-]+.)+[\\w-]+(/[\\w-./?%&=]*)?$")])]),t._v(" "),s("tr",[s("td",[t._v("手机号码")]),t._v(" "),s("td",[t._v("^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d{8}$")])]),t._v(" "),s("tr",[s("td",[t._v("国内电话号码")]),t._v(" "),s("td",[t._v("\\d{3}-\\d{8}|\\d{4}-\\d{7}(0511-4405222、021-87888822)")])]),t._v(" "),s("tr",[s("td",[t._v("身份证号")]),t._v(" "),s("td",[t._v("^\\d{15}|\\d{18}$(15位、18位数字)")])]),t._v(" "),s("tr",[s("td",[t._v("短身份证号码")]),t._v(" "),s("td",[t._v("^([0-9]){7,18}(x|X)?$ 或 ^\\d{8,18}")])]),t._v(" "),s("tr",[s("td",[t._v("帐号是否合法")]),t._v(" "),s("td",[t._v("^[a-zA-Z][a-zA-Z0-9_]{4,15}$(字母开头，允许5-16字节，允许字母数字下划线)")])]),t._v(" "),s("tr",[s("td",[t._v("密码")]),t._v(" "),s("td",[t._v("^[a-zA-Z]\\w{5,17}$(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)")])]),t._v(" "),s("tr",[s("td",[t._v("强密码")]),t._v(" "),s("td",[t._v("^(?=."),s("em",[t._v("\\d)(?=.")]),t._v("[a-z])(?=.*[A-Z]).{8,10}$(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)")])]),t._v(" "),s("tr",[s("td",[t._v("日期格式")]),t._v(" "),s("td",[t._v("^\\d{4}-\\d{1,2}-\\d{1,2}")])]),t._v(" "),s("tr",[s("td",[t._v("一年的12个月(01～09和1～12)")]),t._v(" "),s("td",[t._v("^(0?[1-9]|1[0-2])$")])]),t._v(" "),s("tr",[s("td",[t._v("一个月的31天(01～09和1～31)")]),t._v(" "),s("td",[t._v("^((0?[1-9])|((1|2)[0-9])|30|31)$")])]),t._v(" "),s("tr",[s("td",[t._v("xml文件")]),t._v(" "),s("td",[t._v("^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\.[x|X][m|M][l|L]$")])]),t._v(" "),s("tr",[s("td",[t._v("双字节字符")]),t._v(" "),s("td",[s("a",{attrs:{href:"%E5%8C%85%E6%8B%AC%E6%B1%89%E5%AD%97%E5%9C%A8%E5%86%85%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%94%A8%E6%9D%A5%E8%AE%A1%E7%AE%97%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E9%95%BF%E5%BA%A6(%E4%B8%80%E4%B8%AA%E5%8F%8C%E5%AD%97%E8%8A%82%E5%AD%97%E7%AC%A6%E9%95%BF%E5%BA%A6%E8%AE%A12%EF%BC%8CASCII%E5%AD%97%E7%AC%A6%E8%AE%A11)"}},[t._v("^\\x00-\\xff")])])]),t._v(" "),s("tr",[s("td",[t._v("空白行的正则表达式")]),t._v(" "),s("td",[t._v("\\n\\s*\\r (可以用来删除空白行)")])]),t._v(" "),s("tr",[s("td",[t._v("HTML标记的正则表达式")]),t._v(" "),s("td",[t._v("<(\\S*?)[^>]"),s("em",[t._v(">.")]),t._v("?</\\1>|<.*? />(对于复杂的嵌套标记依旧无能为力)")])]),t._v(" "),s("tr",[s("td",[t._v("首尾空白字符的正则表达式")]),t._v(" "),s("td",[t._v("^\\s*|\\s*$或(^\\s*)")])]),t._v(" "),s("tr",[s("td",[t._v("腾讯QQ号")]),t._v(" "),s("td",[t._v("[1-9][0-9]{4,} (腾讯QQ号从10000开始)")])]),t._v(" "),s("tr",[s("td",[t._v("中国邮政编码")]),t._v(" "),s("td",[t._v("[1-9]\\d{5}(?!\\d) (中国邮政编码为6位数字)")])]),t._v(" "),s("tr",[s("td",[t._v("IP地址提取")]),t._v(" "),s("td",[t._v("\\d+.\\d+.\\d+.\\d+ (提取IP地址时有用)")])]),t._v(" "),s("tr",[s("td",[t._v("IP地址合法性判断")]),t._v(" "),s("td",[t._v("((?😦?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))")])])])]),t._v(" "),s("h2",{attrs:{id:"python-使用正则-re模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python-使用正则-re模块"}},[t._v("#")]),t._v(" Python 使用正则 "),s("code",[t._v("RE")]),t._v("模块")]),t._v(" "),s("p",[t._v("在Python中，通过内置的re模块提供对正则表达式的支持。正则表达式会被编译成一系列的字节码，然后由通过C编写的正则表达式引擎进行执行。该引擎自从Python1.6被内置以来，近20年时间未有发生过变化，实乃我辈楷模。")]),t._v(" "),s("h3",{attrs:{id:"正则匹配方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则匹配方法"}},[t._v("#")]),t._v(" 正则匹配方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("描述")]),t._v(" "),s("th",[t._v("返回值")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("search(pattern, string[, flags])")]),t._v(" "),s("td",[t._v("在字符串中查找")]),t._v(" "),s("td",[t._v("第一个匹配到的对象或者None")])]),t._v(" "),s("tr",[s("td",[t._v("match(pattern, string[, flags])")]),t._v(" "),s("td",[t._v("在字符串的开始处匹配模式")]),t._v(" "),s("td",[t._v("在字符串开头匹配到的对象或者None")])]),t._v(" "),s("tr",[s("td",[t._v("split(pattern, string[, maxsplit=0,flags])")]),t._v(" "),s("td",[t._v("根据模式的匹配项来分割字符串")]),t._v(" "),s("td",[t._v("分割后的字符串列表")])]),t._v(" "),s("tr",[s("td",[t._v("findall(pattern, string,flags)")]),t._v(" "),s("td",[t._v("列出字符串中模式的所有匹配项")]),t._v(" "),s("td",[t._v("所有匹配到的字符串列表")])]),t._v(" "),s("tr",[s("td",[t._v("sub(pat,repl, string[,count=0,flags])")]),t._v(" "),s("td",[t._v("将字符串中所有的pat的匹配项用repl替换")]),t._v(" "),s("td",[t._v("完成替换后的新字符串")])])])]),t._v(" "),s("h3",{attrs:{id:"常用方法实例介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用方法实例介绍"}},[t._v("#")]),t._v(" 常用方法实例介绍")]),t._v(" "),s("h3",{attrs:{id:"match"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#match"}},[t._v("#")]),t._v(" match")]),t._v(" "),s("p",[s("code",[t._v("match(pattern, string, flags=0)")])]),t._v(" "),s("p",[t._v("match()方法会在给定字符串的开头进行匹配，如果匹配不成功则返回None，匹配成功返回一个匹配对象，这个对象有个group()方法，可以将匹配到的字符串给出。")]),t._v(" "),s("p",[s("strong",[t._v("示例字符串")])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/python3")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -*-coding:utf-8 -*-")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# @User    : kame")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\ns1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"qianfeng liuwenqi.com liuwq.com "')]),t._v("\n\nstring_re "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配以 qian之后任意字符")]),t._v("\n\nr2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"qian\\w+"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以.com 为结尾的")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # print(s1)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for i in s1:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#     r2 = re.match("^\\w+\\.com$", i)')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     if r2:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#         print(r2.group())")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br")])]),s("h4",{attrs:{id:"search"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#search"}},[t._v("#")]),t._v(" search")]),t._v(" "),s("p",[t._v("从整个字符串的开头找到最后，当第一个匹配成功后，就不再继续匹配。")]),t._v(" "),s("p",[s("strong",[t._v("search(pattern, string, flags=0)")])]),t._v(" "),s("div",{staticClass:"language-Python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("s2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123abc456abc789"')]),t._v("\n\nrs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("span"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h4",{attrs:{id:"findall"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#findall"}},[t._v("#")]),t._v(" findall")]),t._v(" "),s("p",[t._v("搜索整个字符串，找到所有匹配成功的字符串，比把这些字符串放在一个列表中返回。")]),t._v(" "),s("p",[s("code",[t._v("findall(pattern, string, flags=0)")])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("s2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123abc456abcliuwq123liuwenq1234liuwq"')]),t._v("\nrf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"liuwq"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ns2\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123abc456abcliuwq123liuwenq1234liuwq'")]),t._v("\nrf\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'liuwq'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'liuwq'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nrf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nTraceback "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("most recent call last"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  File "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<input>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" line "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("module"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nAttributeError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'list'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),t._v(" has no attribute "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'group'")]),t._v("\nrf2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wenqi"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rf2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("h4",{attrs:{id:"sub"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sub"}},[t._v("#")]),t._v(" sub")]),t._v(" "),s("p",[s("strong",[t._v("sub(pattern, repl, string, count=0, flags=0)")])]),t._v(" "),s("p",[t._v("把匹配成功的字符串，进行替换。")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 语法：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n("100",    "liuwq",        string,     2)\n匹配规则,替换成的新内容,  被搜索的对象, 有相同的话替换的次数\n\n\n"""')]),t._v("\ns4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'isinst100 y100 enumerate www.qfedu.com 1997'")]),t._v("\n\nr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sub"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"100"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"liuwq"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nr\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'isinstliuwq yliuwq enumerate www.qfedu.com 1997'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 模式不匹配时，返回原来的值")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("h4",{attrs:{id:"split"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#split"}},[t._v("#")]),t._v(" split")]),t._v(" "),s("p",[t._v("以匹配到的字符进行分割，返回分割后的列表")]),t._v(" "),s("p",[s("strong",[t._v("split(pattern, string, maxsplit=0, flags=0)")])]),t._v(" "),s("p",[t._v("re模块的split()方法和字符串的split()方法很相似，都是利用特定的字符去分割字符串。但是re模块的split()可以使用正则表达式，因此更灵活，更强大，而且还有“杀手锏”")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8+7*5+6/3"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" a_list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('r"[\\+\\-\\*\\/]"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" a_list\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'8'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'7'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'6'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("split有个参数maxsplit，用于指定分割的次数：")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" a_list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('r"[\\+\\-\\*\\/]"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("maxsplit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" a_list\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'8'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'7'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5+6/3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h4",{attrs:{id:"分组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分组"}},[t._v("#")]),t._v(" 分组")]),t._v(" "),s("h5",{attrs:{id:"正则分组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则分组"}},[t._v("#")]),t._v(" 正则分组")]),t._v(" "),s("p",[s("strong",[t._v("从已经成功匹配的内容中，再去把想要的取出来")])]),t._v(" "),s("ul",[s("li",[t._v("match")])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# match")]),t._v("\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\nOut"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'isinstance yangge enumerate www.qfedu.com  1997'")]),t._v("\n\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"is(\\w+)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("66")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nOut"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("66")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'isinstance'")]),t._v("\n\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("67")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("groups"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nOut"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("67")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'instance'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h5",{attrs:{id:"命名分组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命名分组"}},[t._v("#")]),t._v(" 命名分组")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("search")])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[s("code",[t._v("(?P<name>\\d)中?P<name>")]),t._v("是个正则表达式的特殊语法，表示给这个小组取了个叫“name”的名字，"),s("code",[t._v("?P<xxxx>")]),t._v("是固定写法。在获取分组值的时候，"),s("code",[t._v("group()")]),t._v("和"),s("code",[t._v("group(0)")]),t._v("是对等的，都表示整个匹配到的字符串，从"),s("code",[t._v("group(1)")]),t._v("开始，分别是从左往右的小组序号，按位置顺序来。")])]),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("In "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("87")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"is\\w+\\s(?P<name>y\\w+e)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("88")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nOut"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("88")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'isinstance yangge'")]),t._v("\n\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("89")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("groups"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nOut"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("89")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yangge'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("groupdict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nOut"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yangge'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("ul",[s("li",[s("code",[t._v("findall")])])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("In "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("98")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\nOut"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("98")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'isinstance all yangge any enumerate www.qfedu.com  1997'")]),t._v("\n\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a(?P<name>\\w+)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" r\nOut"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nce'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ll'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ngge'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ny'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'te'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a(\\w+)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" r\nOut"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nce'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ll'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ngge'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ny'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'te'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("ul",[s("li",[s("code",[t._v("split")])])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("In "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("113")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\nOut"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("113")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'isinstance all yangge any enumerate www.qfedu.com 1997'")]),t._v("\n\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("114")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(any)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("115")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" r\nOut"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("115")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'isinstance all yangge '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'any'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' enumerate www.qfedu.com 1997'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 嵌套分组")]),t._v("\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("116")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(a(ny))"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("117")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" r\nOut"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("117")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'isinstance all yangge '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'any'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ny'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' enumerate www.qfedu.com 1997'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])]),s("ul",[s("li",[s("code",[t._v("sub")]),t._v(" 高级用法")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[s("code",[t._v("sub()")]),t._v("方法 高级功能——“分组引用”,其实现机制是首先在正则表达式里用括号建立了一个分组，然后在要替换进去的字符串里用"),s("code",[t._v("\\1")]),t._v("引用了这个分组匹配到的内容")])]),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("In "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("118")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value=\"1997/07/01\"'")]),t._v("\n\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("119")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sub"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'(value=\"\\d{4})/(\\d{2})/(\\d{2})\"'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'\\1年\\2月\\3日\"'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nIn  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" s\nOut "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1997年07月01日"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);