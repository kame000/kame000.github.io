(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{514:function(s,t,a){"use strict";a.r(t);var e=a(2),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"mysql导出长数字到excel避免显示为科学记数法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql导出长数字到excel避免显示为科学记数法"}},[s._v("#")]),s._v(" mysql导出长数字到excel避免显示为科学记数法")]),s._v(" "),t("h2",{attrs:{id:"现象描述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#现象描述"}},[s._v("#")]),s._v(" 现象描述")]),s._v(" "),t("p",[s._v("经常遇到MYSQL导出长数字或纯数字字符串（如身份证、卡券号、条码、流水号等）到csv或excel文件，用excel打开会显示为科学记数法，甚至后几位转为0。这是由Excel的特性决定的：Excel显示11位以上的数字时，会自动转化为科学计数法，如果长度大于15位，15位以后数字还会转成0。")]),s._v(" "),t("p",[s._v("网上搜到的解决办法是在该长数字前增加tab字符：\n即：\n"),t("code",[s._v('CONCAT("\\t",str)')]),s._v("\n其中 \\t 为制表符（即键盘上的Tab键）的转义符")]),s._v(" "),t("p",[s._v("实践时发现按此方法导出的文件打开后虽然显示为文本字符，但长度多了1，在字符前多了一个不可见空格（制表符），删掉才是原来的字符。")]),s._v(" "),t("blockquote",[t("p",[s._v("如果只是展示、打印倒无妨，但如果需要后续引用该字符串（如用VLOOKUP匹配），因为前面多了一个不可见的空格，长度也多了一位，则可能会出错。")])]),s._v(" "),t("p",[s._v("后来想起excel输入长数字的可在数字前输入单引号”‘”强制转为文本，在 mysql输出时也可以试试，测试可用：\n即：\n"),t("code",[s._v('CONCAT("\'",str)')]),s._v("\n或者\n"),t("code",[s._v('CONCAT("\\\'",str)')]),s._v("\n另外注意需保存为excel文件,即xls或xlsx文件，该数字即已强转为文本格式；如保存为csv，用excel打开则显示为可见单引号+数字形式，原因尚不明。")]),s._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("如果只需要导出展示、打印：可使用 "),t("code",[s._v('CONCAT("\\t",str)')])])]),s._v(" "),t("li",[t("p",[s._v("如果需要后续处理，引用，最好使用"),t("code",[s._v('CONCAT("\'",str)')]),s._v("或者"),t("code",[s._v('CONCAT("\\\'",str)')]),s._v("，并导出为EXCEL文件。")])])]),s._v(" "),t("h2",{attrs:{id:"解决办法-在导出查询时-使用mysql中concat函数给长数字的字段加上单引号-再点击【导出向导】导出excel-excel打开就显示正常的长数字了"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决办法-在导出查询时-使用mysql中concat函数给长数字的字段加上单引号-再点击【导出向导】导出excel-excel打开就显示正常的长数字了"}},[s._v("#")]),s._v(' 解决办法：在导出查询时，使用MySQL中concat函数给长数字的字段加上单引号","，再点击【导出向导】导出excel，excel打开就显示正常的长数字了，')]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" CONCAT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"`"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("p_card_num"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("card_num "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" ppos_member_card_src "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" p_card_num"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("002580986")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" CONCAT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\t"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("p_card_num"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("card_num "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" ppos_member_card_src "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" p_card_num"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("002580986")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);