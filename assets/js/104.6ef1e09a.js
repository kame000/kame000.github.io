(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{507:function(a,e,s){"use strict";s.r(e);var t=s(2),n=Object(t.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"memchached-还是-redis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#memchached-还是-redis"}},[a._v("#")]),a._v(" Memchached 还是 Redis?")]),a._v(" "),e("p",[a._v("该用哪一个？当我们讨论改进性能的时候，这是每次技术讨论中最常见的一个问题。每当性能需要改善时，采用缓存常常是迈出的第一步。与此同时，选择Memcached 或者 Redis 通常是第一个需要考虑的地方。哪个能给我们提供更佳的性能？它们的优点和缺点又是什么？")]),a._v(" "),e("blockquote",[e("p",[a._v("在设计任何缓存系统时，我们考虑如下几点：")])]),a._v(" "),e("ul",[e("li",[a._v("读/写速度")]),a._v(" "),e("li",[a._v("内存使用情况")]),a._v(" "),e("li",[a._v("磁盘 I/O 转储.")]),a._v(" "),e("li",[a._v("伸缩性.")])]),a._v(" "),e("h2",{attrs:{id:"redis-memchached-之间的相似之处"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis-memchached-之间的相似之处"}},[a._v("#")]),a._v(" Redis & Memchached 之间的相似之处:")]),a._v(" "),e("p",[a._v("Memcached/Redis 两者都提供基于内存的、键-值数据存储，尽管Redis更准确的说是结构化数据存储。Redis是内存中的结构化数据存储器，用于数据库、缓存、消息代理。两者（Memcached/Redis）都属于数据管理方案中的NoSQL家族，都是基于键-值存储的。它们都在内存中保存数据，当然使它们作为缓存层特别有用。")]),a._v(" "),e("p",[a._v("截至今日，"),e("code",[a._v("Memcached提供的每项主要功能及其优势，都是Redis功能和特性的子集")]),a._v("。"),e("code",[a._v("任何用例中可能使用Memcached的地方都可以对等的使用Redis")]),a._v("。它们都是闪电般快速的高速缓存。Memcached提供的只是Redis拥有功能的冰山一角。Memcached是一个基于易失性内存的键-值存储器。Redis一样可以做到（跟Memcached做得一样好），但是它还是一个结构化数据服务器。")]),a._v(" "),e("h3",{attrs:{id:"为什么选-memcached"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么选-memcached"}},[a._v("#")]),a._v(" 为什么选 Memcached?")]),a._v(" "),e("p",[a._v("当缓存相对较小和使用静态的数据时候，比如HTML代码片段，Memcached可能更为可取。Memcached内部的内存管理在最简单的用例中更为有效，因为它的元数据消耗相对更少的内存资源。")]),a._v(" "),e("p",[a._v("当数据尺寸是动态的时候，Memcached的内存管理效率下降的很快，此时Memcached的内存会变成碎片。而且，大的数据集经常牵扯到数据序列化，总是需要更多的空间来存储。如果你使用Memcached，数据会随着重启动而丢失，重建缓存是个代价高昂的过程。")]),a._v(" "),e("p",[a._v("Memcached比Redis更具优势的另一个场景在伸缩性。")]),a._v(" "),e("p",[a._v("因为Memcached是多线程的，所以你可以通过给它更多计算资源让它轻松扩展。")]),a._v(" "),e("p",[a._v("Redis是单线程的，可以通过集群无损水平扩展。集群是一个有效的扩展方案，但是相对来说配置、操作复杂。Memcached不支持复制功能（数据从一台机器自动复制到另外一台）。")]),a._v(" "),e("p",[a._v("Memcached 非常适合处理高流量的网站。它可以一次性读取大量的信息，并在优秀的反应时间内返回。Redis不但能处理高流量的读，还能处理繁重的写入。")]),a._v(" "),e("h3",{attrs:{id:"为什么选-redis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么选-redis"}},[a._v("#")]),a._v(" 为什么选 Redis?")]),a._v(" "),e("p",[a._v("Redis有五种主要的数据结构可以选择。通过对缓存数据智能化的缓存和处理，它为应用程序开发人员打开了存在各种可能的新世界。由于其数据结构（使用多种格式存储数据：列表、数组、集合、有序集合）特性，Redis作为缓存系统提供了更多的能力和总体上更好的效率。缓存使用一种称为“数据回收”的机制，通过从内存中删除旧数据为新数据腾出空间。Memcached的数据回收机制使用了LRU（Least Recently Used-最近最少使用）算法，但回收与新数据近似大小的数据时有点随意性。")]),a._v(" "),e("p",[a._v("Redis允许对回收进行细粒度的控制，让你选择六种不同的回收策略。Redis同时支持惰性（被动）和主动回收，只有在需要更多空间或主动激活时才回收数据。另一方面，Memcached只支持惰性回收。")]),a._v(" "),e("p",[a._v("以下是redis提供的一些功能，可以用于“真实”数据存储，而不仅仅是缓存。")]),a._v(" "),e("p",[a._v("强大的数据类型和可利用它们的强大命令支持。哈希、有序集合、列表等。\n默认的磁盘持久化支持\n使用乐观锁的事务支持 (WATCH/MULTI/EXEC)\n发布/订阅功能，速度极快\n高达512MB的键值尺寸上限（Memcached每个键值限于1MB大小）\nLua 脚本支持 (2.6及以上版本)\n内置集群支持 (3.0及以上版本)\n一切都极快\n强大的数据类型尤为重要。它们允许Redis提供一个出色的共享队列（list），一个很棒的消息传递解决方案（pub/sub），一个存储会话信息（hashes）的好地方，还有一个引人注目的高分值追踪区域（sorted sets）。它们仅仅是简单探讨就能得到的使用样例。")]),a._v(" "),e("p",[a._v("结论\nRedis与Memcached相比，性能和内存使用情况相当相似。除非你已经在Memcached上投入了大笔资金，否则向前推进使用Redis是显而易见的解决方案。不仅Redis是更好的选择，它还支持全新类型的用例和使用模式。")]),a._v(" "),e("p",[a._v("Redis可能会非常有用的一些示例应用程序：")]),a._v(" "),e("p",[a._v("电子商务应用：大多数的电子商务应用量级比较重，Redis可以提升你的页面加载速度。你可以存储所有的配置文件到Redis，从内存中读取这些配置信息速度会非常快速。你也可以在Redis中存储完整的页面缓存，因为它的键值容量很大。你也可以存储会话信息到Redis。")]),a._v(" "),e("p",[a._v("物联网应用：在物联网应用中，物联网设备非常频繁的发送数据到服务器，比如每秒钟数千条。在把它们存储到任何持久性存储器之前，你可以先把这些高容量的原始数据推送到Redis。")]),a._v(" "),e("p",[a._v("实时分析：可以在Memcached上实现一个实时的分析引擎，以数据库为后盾。但是Redis非常擅长统计列表和一系列事物。在所有的Redis功能特性中，它对键值进行排序的能力超过了Memcached，还有计算一组页面的点击次数等数据，然后将这些数字汇总进入分析系统。这些数据可通过工作人员输入到更大的分析引擎，在这些应用场合选择Redis是正确的决定之一。")]),a._v(" "),e("p",[a._v("最后一件事：不管你选择什么，缓存系统都不是数据库。你不能光靠缓存，系统同时需要缓存和数据库。")]),a._v(" "),e("h1",{attrs:{id:"memcached安装与部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#memcached安装与部署"}},[a._v("#")]),a._v(" Memcached安装与部署")]),a._v(" "),e("p",[a._v("一. 检查是否安装libevent")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("rpm")]),a._v(" -qa"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" libevent  \n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("如果已经安装libevent，需要查看libevent的安装路径，后面需要使用")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("rpm")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ql")]),a._v(" libevent \n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("二. 安装livevent(已安装忽略此步)")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://github.com/libevent/libevent/releases/download/release-2.1.8-stable/libevent-2.1.8-stable.tar.gz\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-zxvf")]),a._v("  libevent-2.1.8-stable.tar.gz\n\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" libevent-2.1.8-stable\n\n./configure "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--prefix")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/usr/local/libevent\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br")])]),e("p",[a._v("三、安装memcache")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-zxvf")]),a._v(" memcached-1.5.7.tar.gz \n\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" memcached-1.5.7/ \n\n./configure -with-libevent"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/usr/local/libevent/ "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-prefix")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/usr/local/memcached\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" \n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br")])]),e("p",[a._v("开启memcache，并连接测试")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("以守护进程模式启动memcached\n/usr/local/memcached/bin/memcached "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".189.129 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("11211")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2048")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" root\n\n查看memcache是否开启\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("netstat")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ntpl")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" memcache\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("p",[a._v("客户端连接测试（使用telnet）")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("telnet "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("192")]),a._v(".XXX.XXX.XXX "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("11211")]),a._v("\n能连接上说明安装成功\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("四、启动参数\n查看memcache的启动参数")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("/usr/local/memcached/bin/memcached "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-h")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("常用的如下：")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" 以守护进程（daemon）方式运行memcached\n"),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),a._v(" 设置memcached可以使用的内存大小，单位MB\n"),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v("  设置可以监听的IP地址，本机通常不设置此参数\n"),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" 设置监听端口，默认11211，也可以不设置此参数\n"),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v("  指定用户，如果当前为root，需要使用此参数指定用户\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("p",[a._v("五、安装Memcached客户端")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" http://pecl.php.net/get/memcache-2.2.5.tgz\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-zxvf")]),a._v(" memcache-2.2.5.tgz\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" memcache-2.2.5.tgz\nphpize\n./configure "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--enable")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-memcache")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--with")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-php")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-config")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/usr/local/php/bin/php "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-config")]),a._v(" --with-zlib-dir\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br")])]),e("p",[a._v("在php配置文件里加入一下配置")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("extension "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" /usr/local/php/lib/php/extensions/no-debug-non-zts-20180326/memcache.so\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("重启web服务器，查看"),e("code",[a._v("phpinfo（）；")])])])}),[],!1,null,null,null);e.default=n.exports}}]);