(window.webpackJsonp=window.webpackJsonp||[]).push([[154],{558:function(t,_,s){"use strict";s.r(_);var e=s(2),r=Object(e.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"nginx变量注解"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#nginx变量注解"}},[t._v("#")]),t._v(" nginx变量注解")]),t._v(" "),_("blockquote",[_("p",[t._v("nginx_version 变量解释")])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("参数名称")]),t._v(" "),_("th",[t._v("注释")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$arg_PARAMETER")]),t._v(" "),_("td",[t._v("HTTP 请求中某个参数的值,如/index.php?site=www.ttlsa.com,可以用$arg_site 取得 www.ttlsa.com 这个值.")])]),t._v(" "),_("tr",[_("td",[t._v("$args HTTP")]),t._v(" "),_("td",[t._v("请求中的完整参数。例如,在请求/index.php?width=400&height=200 中,$args 表示  字符串 width=400&height=200.")])]),t._v(" "),_("tr",[_("td",[t._v("$binary_remote_addr")]),t._v(" "),_("td",[t._v("二进制格式的客户端地址。例如:\\x0A\\xE0B\\x0E")])]),t._v(" "),_("tr",[_("td",[t._v("$body_bytes_sent")]),t._v(" "),_("td",[t._v("表示在向客户端发送的 http 响应中,包体部分的字节数")])]),t._v(" "),_("tr",[_("td",[t._v("$content_length")]),t._v(" "),_("td",[t._v("表示客户端请求头部中的 Content-Length 字段")])]),t._v(" "),_("tr",[_("td",[t._v("$content_type")]),t._v(" "),_("td",[t._v("表示客户端请求头部中的 Content-Type 字段")])]),t._v(" "),_("tr",[_("td",[t._v("$cookie_COOKIE")]),t._v(" "),_("td",[t._v("表示在客户端请求头部中的 cookie 字段")])]),t._v(" "),_("tr",[_("td",[t._v("$document_root")]),t._v(" "),_("td",[t._v("表示当前请求所使用的 root 配置项的值")])]),t._v(" "),_("tr",[_("td",[t._v("$uri")]),t._v(" "),_("td",[t._v("表示当前请求的 URI,不带任何参数")])]),t._v(" "),_("tr",[_("td",[t._v("$document_uri")]),t._v(" "),_("td",[t._v("与$uri 含义相同")])]),t._v(" "),_("tr",[_("td",[t._v("$request_uri")]),t._v(" "),_("td",[t._v("表示客户端发来的原始请求 URI,带完整的参数。$uri 和$document_uri 未必是用户的原始请求,在内部重定向后可能是重定向后的 URI,而$request_uri 永远不会改变,始终是客户端的原始 URI.")])]),t._v(" "),_("tr",[_("td",[t._v("$host")]),t._v(" "),_("td",[t._v("表示客户端请求头部中的 Host 字段。如果 Host 字段不存在,则以实际处理的 server(虚拟主机)名称代替。如果 Host 字段中带有端口,如 IP:PORT,那么$host 是去掉端口的,它的值为 IP。$host是全小写的。这些特性与 http_HEADER 中的 http_host 不同,http_host 只取出 Host 头部对应的值。")])]),t._v(" "),_("tr",[_("td",[t._v("$hostname")]),t._v(" "),_("td",[t._v("表示 Nginx 所在机器的名称,与 gethostbyname 调用返回的值相同")])]),t._v(" "),_("tr",[_("td",[t._v("$http_HEADER")]),t._v(" "),_("td",[t._v("表示当前 HTTP 请求中相应头部的值。HEADER 名称全小写。例如,示请求中 Host 头部对应的值 用 $http_host 表")])]),t._v(" "),_("tr",[_("td",[t._v("$sent_http_HEADER")]),t._v(" "),_("td",[t._v("表示返回客户端的 HTTP 响应中相应头部的值。HEADER 名称全小写。例如,用 $sent_http_content_type 表示响应中 Content-Type 头部对应的值")])]),t._v(" "),_("tr",[_("td",[t._v("$is_args")]),t._v(" "),_("td",[t._v("表示请求中的 URI 是否带参数,如果带参数,$is_args 值为 ?,如果不带参数,则是空字符串")])]),t._v(" "),_("tr",[_("td",[t._v("$limit_rate")]),t._v(" "),_("td",[t._v("表示当前连接的限速是多少,0 表示无限速")])]),t._v(" "),_("tr",[_("td",[t._v("$nginx_version")]),t._v(" "),_("td",[t._v("表示当前 Nginx 的版本号")])]),t._v(" "),_("tr",[_("td",[t._v("$query_string")]),t._v(" "),_("td",[t._v("请求 URI 中的参数,与 $args 相同,然而 $query_string 是只读的不会改变")])]),t._v(" "),_("tr",[_("td",[t._v("$remote_addr")]),t._v(" "),_("td",[t._v("表示客户端的地址")])]),t._v(" "),_("tr",[_("td",[t._v("$remote_port")]),t._v(" "),_("td",[t._v("表示客户端连接使用的端口")])]),t._v(" "),_("tr",[_("td",[t._v("$remote_user")]),t._v(" "),_("td",[t._v("表示使用 Auth Basic Module 时定义的用户名")])]),t._v(" "),_("tr",[_("td",[t._v("$request_filename")]),t._v(" "),_("td",[t._v("表示用户请求中的 URI 经过 root 或 alias 转换后的文件路径")])]),t._v(" "),_("tr",[_("td",[t._v("$request_body")]),t._v(" "),_("td",[t._v("表示 HTTP 请求中的包体,该参数只在 proxy_pass 或 fastcgi_pass 中有意义")])]),t._v(" "),_("tr",[_("td",[t._v("$request_body_file")]),t._v(" "),_("td",[t._v("表示 HTTP 请求中的包体存储的临时文件名")])]),t._v(" "),_("tr",[_("td",[t._v("$request_completion")]),t._v(" "),_("td",[t._v("当请求已经全部完成时,其值为 “ok”。若没有完成,就要返回客户端,则其值为空字符串;或者在断点续传等情况下使用 HTTP range 访问的并不是文件的最后一块,那么其值也是空字符串。")])]),t._v(" "),_("tr",[_("td",[t._v("$request_method")]),t._v(" "),_("td",[t._v("表示 HTTP 请求的方法名,如 GET、PUT、POST 等")])]),t._v(" "),_("tr",[_("td",[t._v("$scheme")]),t._v(" "),_("td",[t._v("表示 HTTP scheme,如在请求 https://nginx.com/中表示 https")])]),t._v(" "),_("tr",[_("td",[t._v("$server_addr")]),t._v(" "),_("td",[t._v("表示服务器地址")])]),t._v(" "),_("tr",[_("td",[t._v("$server_name")]),t._v(" "),_("td",[t._v("表示服务器名称")])]),t._v(" "),_("tr",[_("td",[t._v("​$server_port")]),t._v(" "),_("td",[t._v("表示服务器端口")])]),t._v(" "),_("tr",[_("td",[t._v("$server_protocol")]),t._v(" "),_("td",[t._v("表示服务器向客户端发送响应的协议,如 HTTP/1.1 或 HTTP/1.0")])])])]),t._v(" "),_("h2",{attrs:{id:"nginx日志变量注解"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#nginx日志变量注解"}},[t._v("#")]),t._v(" nginx日志变量注解")]),t._v(" "),_("h3",{attrs:{id:"log-format-指令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#log-format-指令"}},[t._v("#")]),t._v(" log_format 指令")]),t._v(" "),_("ul",[_("li",[t._v("语法: log_format name string ...;")]),t._v(" "),_("li",[t._v("默认值: log_format combined “...”;")]),t._v(" "),_("li",[t._v("配置段: http")]),t._v(" "),_("li",[t._v("name 表示格式名称,string 表示等义的格式。")])]),t._v(" "),_("p",[t._v("log_format 有一个默认的无需设置的 combined 日志格式,相当于apache 的 combined 日志格式,如下所示:")]),t._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[t._v("  log_format combined\n  '$remote_addr - $remote_user [$time_local] '\n  ' \"$request\" $status $body_bytes_sent '\n  ' \"$http_referer\" \"$http_user_agent\" ';\n")])])]),_("p",[t._v("如果 nginx 位于负载均衡器,squid,nginx 反向代理之后,web 服务器无法直接获取到客户端真实的 IP 地址了。")]),t._v(" "),_("p",[t._v("$remote_addr 获取反向代理的 IP 地址。反向代理服务器在转发请求的 http 头信息中,可以增加 X-Forwarded-For 信息,用来记录 客户端 IP 地址和客户端请求的服务器地址。PS: 获取用户真实 IP 参见\nhttp://www.ttlsa.com/html/2235.html 如下所示:")]),t._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[t._v("    log_format porxy\n    '$http_x_forwarded_for - $remote_user [$time_local] '\n    ' \"$request\" $status $body_bytes_sent '\n    ' \"$http_referer\" \"$http_user_agent\" ';\n")])])]),_("blockquote",[_("p",[t._v("日志格式允许包含的变量注释如下:")])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("参数")]),t._v(" "),_("th",[t._v("注解")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$remote_addr, $http_x_forwarded_for")]),t._v(" "),_("td",[t._v("记录客户端 IP 地址")])]),t._v(" "),_("tr",[_("td",[t._v("$remote_user")]),t._v(" "),_("td",[t._v("记录客户端用户名称")])]),t._v(" "),_("tr",[_("td",[t._v("$request")]),t._v(" "),_("td",[t._v("记录请求的 URL 和 HTTP 协议")])]),t._v(" "),_("tr",[_("td",[t._v("$status")]),t._v(" "),_("td",[t._v("记录请求状态")])]),t._v(" "),_("tr",[_("td",[t._v("$body_bytes_sent")]),t._v(" "),_("td",[t._v("发送给客户端的字节数,不包括响应头的大小; 该变量与 Apache 模块")])]),t._v(" "),_("tr",[_("td",[t._v("$bytes_sent")]),t._v(" "),_("td",[t._v("发送给客户端的总字节数。")])]),t._v(" "),_("tr",[_("td",[t._v("$connection")]),t._v(" "),_("td",[t._v("连接的序列号。")])]),t._v(" "),_("tr",[_("td",[t._v("$connection_requests")]),t._v(" "),_("td",[t._v("当前通过一个连接获得的请求数量。")])]),t._v(" "),_("tr",[_("td",[t._v("$msec")]),t._v(" "),_("td",[t._v("日志写入时间。单位为秒,精度是毫秒。")])]),t._v(" "),_("tr",[_("td",[t._v("$pipe")]),t._v(" "),_("td",[t._v("如果请求是通过 HTTP 流水线(pipelined)发送,pipe 值为“p”,否则为“.”。")])]),t._v(" "),_("tr",[_("td",[t._v("$http_referer")]),t._v(" "),_("td",[t._v("记录从哪个页面链接访问过来的")])]),t._v(" "),_("tr",[_("td",[t._v("$http_user_agent")]),t._v(" "),_("td",[t._v("记录客户端浏览器相关信息")])]),t._v(" "),_("tr",[_("td",[t._v("$request_length")]),t._v(" "),_("td",[t._v("请求的长度(包括请求行,请求头和请求正文)。")])]),t._v(" "),_("tr",[_("td",[t._v("$request_time")]),t._v(" "),_("td",[t._v("请求处理时间,单位为秒,精度毫秒; 从读入客户端的第一个字节开始,直到把最后一个字符发送给客户端后进行日志写入为止。")])]),t._v(" "),_("tr",[_("td",[t._v("$time_iso8601 ISO8601")]),t._v(" "),_("td",[t._v("标准格式下的本地时间。")])]),t._v(" "),_("tr",[_("td",[t._v("$time_local")]),t._v(" "),_("td",[t._v("通用日志格式下的本地时间。")])]),t._v(" "),_("tr",[_("td",[t._v("[warning]")]),t._v(" "),_("td",[t._v("发送给客户端的响应头拥有“sent_http_”前缀。 如​$sent_http_content_range。[/warning]")])])])]),t._v(" "),_("blockquote",[_("p",[t._v("实例如下:")])]),t._v(" "),_("div",{staticClass:"language-yml line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-yml"}},[_("code",[t._v("    http "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      log_format main '$remote_addr "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" $remote_user "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("$time_local"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(' "$request" \'\n      \'"$status" $body_bytes_sent "$http_referer" \'\n      \'"$http_user_agent" "$http_x_forwarded_for" \'\n      \'"$gzip_ratio" $request_time $bytes_sent $request_length\';\n      log_format srcache_log \'$remote_addr '),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" $remote_user "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("$time_local"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \"$request\" '\n      '\"$status\"\n      $body_bytes_sent\n      $request_time\n      $bytes_sent\n      $request_length '\n      '"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("$upstream_response_time"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("$srcache_fetch_status"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("$srcache_store_status"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("$srcache_expire"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("';\n      open_log_file_cache max=1000 inactive=60s;\n    server "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      server_name ~^(www\\.)"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("?")]),t._v("(.+)$;\n      access_log logs/$2"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("access.log main;\n      error_log logs/$2"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("error.log;\n      location /srcache "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        access_log logs/access"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("srcache.log srcache_log;\n      "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br"),_("span",{staticClass:"line-number"},[t._v("2")]),_("br"),_("span",{staticClass:"line-number"},[t._v("3")]),_("br"),_("span",{staticClass:"line-number"},[t._v("4")]),_("br"),_("span",{staticClass:"line-number"},[t._v("5")]),_("br"),_("span",{staticClass:"line-number"},[t._v("6")]),_("br"),_("span",{staticClass:"line-number"},[t._v("7")]),_("br"),_("span",{staticClass:"line-number"},[t._v("8")]),_("br"),_("span",{staticClass:"line-number"},[t._v("9")]),_("br"),_("span",{staticClass:"line-number"},[t._v("10")]),_("br"),_("span",{staticClass:"line-number"},[t._v("11")]),_("br"),_("span",{staticClass:"line-number"},[t._v("12")]),_("br"),_("span",{staticClass:"line-number"},[t._v("13")]),_("br"),_("span",{staticClass:"line-number"},[t._v("14")]),_("br"),_("span",{staticClass:"line-number"},[t._v("15")]),_("br"),_("span",{staticClass:"line-number"},[t._v("16")]),_("br"),_("span",{staticClass:"line-number"},[t._v("17")]),_("br"),_("span",{staticClass:"line-number"},[t._v("18")]),_("br"),_("span",{staticClass:"line-number"},[t._v("19")]),_("br"),_("span",{staticClass:"line-number"},[t._v("20")]),_("br"),_("span",{staticClass:"line-number"},[t._v("21")]),_("br"),_("span",{staticClass:"line-number"},[t._v("22")]),_("br"),_("span",{staticClass:"line-number"},[t._v("23")]),_("br"),_("span",{staticClass:"line-number"},[t._v("24")]),_("br")])])])}),[],!1,null,null,null);_.default=r.exports}}]);