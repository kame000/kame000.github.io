(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{521:function(s,e,t){"use strict";t.r(e);var a=t(2),_=Object(a.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"mysql-索引优化-btree-hash-rtree"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql-索引优化-btree-hash-rtree"}},[s._v("#")]),s._v(" MySQL 索引优化 btree hash rtree")]),s._v(" "),e("h2",{attrs:{id:"mysql索引类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql索引类型"}},[s._v("#")]),s._v(" MySQL索引类型")]),s._v(" "),e("p",[s._v("mysql里目前只支持4种索引分别是："),e("code",[s._v("full-text")]),s._v("，"),e("code",[s._v("b-tree")]),s._v("，"),e("code",[s._v("hash")]),s._v("，"),e("code",[s._v("r-tree")])]),s._v(" "),e("p",[e("code",[s._v("b-tree")]),s._v("索引应该是mysql里最广泛的索引的了，除了"),e("code",[s._v("archive")]),s._v("基本所有的存储引擎都支持它.")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("full-text")]),s._v("索引")])]),s._v(" "),e("p",[e("code",[s._v("full-text")]),s._v("在mysql里仅有myisam支持它，而且支持full-text的字段只有char、varchar、text数据类型。")]),s._v(" "),e("p",[e("code",[s._v("full-text")]),s._v('主要是用来代替like "%***%"效率低下的问题')]),s._v(" "),e("ul",[e("li",[s._v("b-tree索引")])]),s._v(" "),e("p",[s._v("b-tree在myisam里的形式和innodb稍有不同")]),s._v(" "),e("p",[s._v("在 innodb里，有两种形态：一是primary key形态，其leaf node里存放的是数据，而且不仅存放了索引键的数据，还存放了其他字段的数据。二是secondary index，其leaf node和普通的b-tree差不多，只是还存放了指向主键的信息.")]),s._v(" "),e("p",[s._v("而在myisam里，主键和其他的并没有太大区别。不过和innodb不太一样的地方是在myisam里，leaf node里存放的不是主键的信息，而是指向数据文件里的对应数据行的信息.")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("hash")]),s._v("索引")])]),s._v(" "),e("p",[s._v("目前我所知道的就只有"),e("code",[s._v("memory")]),s._v("和"),e("code",[s._v("ndb cluster")]),s._v("支持这种索引.")]),s._v(" "),e("p",[s._v("hash索引由于其结构，所以在每次查询的时候直接一次到位，不像b-tree那样一点点的前进。所以hash索引的效率高于"),e("code",[s._v("b-tree")]),s._v("，但hash也有缺点，主要如下：")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("由于存放的是hash值，所以仅支持<=>以及in操作.")])]),s._v(" "),e("li",[e("p",[s._v("hash索引无法通过操作索引来排序，这是因为存放的时候经过hash计算，但是计算的hash值和存放的不一定相等，所以无法排序.")])]),s._v(" "),e("li",[e("p",[s._v("在组合所以里，无法对部分使用索引.")])]),s._v(" "),e("li",[e("p",[s._v("不能避免全表扫描，只是由于在memory表里支持非唯一值hash索引，就是不同的索引键，可能存在相同的hash值.")])]),s._v(" "),e("li",[e("p",[s._v("当存在大量相同hash值得时候，hash索引的效率会变低.")])])]),s._v(" "),e("ul",[e("li",[e("code",[s._v("r-tree")]),s._v("索引")])]),s._v(" "),e("blockquote",[e("p",[s._v("r-tree在mysql很少使用，仅支持geometry数据类型，支持该类型的存储引擎只有myisam、bdb、innodb、ndb、archive几种。")])]),s._v(" "),e("p",[s._v("相对于b-tree，r-tree的优势在于范围查找.")]),s._v(" "),e("h2",{attrs:{id:"mysql里sql语句值得注意的地方"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql里sql语句值得注意的地方"}},[s._v("#")]),s._v(" mysql里sql语句值得注意的地方")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("myisam里所有键的长度仅支持1000字节，innodb是767.")])]),s._v(" "),e("li",[e("p",[s._v("blob和text字段仅支持前缀索引.")])]),s._v(" "),e("li",[e("p",[s._v("使用!=以及<>不等于的时候，mysql不使用索引.")])]),s._v(" "),e("li",[e("p",[s._v("当在字段时候函数的时候，mysql无法使用索引；在join时条件字段类型不一致的时候，mysql无法使用索引；在组合索引里使用非第一个索引时也不使用索引.")])]),s._v(" "),e("li",[e("p",[s._v('在使用like的时候，以%开头，即"%***"的时候无法使用索引；在使用or的时候，要求or前后字段都有索引.')])])]),s._v(" "),e("p",[s._v("有时候"),e("code",[s._v("mysql query optimizer")]),s._v("会认为使用索引并不是最优计划,所以不使用索引。可以在sql语句里可以用use,force index,当然有时候使用也不会比不用快,所以需要忽略掉index方法是ignore index.")]),s._v(" "),e("p",[s._v("关闭查询缓存"),e("code",[s._v("sql_no_cache")])]),s._v(" "),e("p",[e("code",[s._v("select sql_no_cache * from table_name;")])]),s._v(" "),e("p",[s._v("这样可以让一些很少使用的语句不放在缓存里，查找的时候不会去缓存里找；对应的是强制缓存sql_cache")]),s._v(" "),e("p",[e("code",[s._v("select sql_cache * from table_name;")])]),s._v(" "),e("p",[s._v("另外，在my.cnf中如果设置"),e("code",[s._v("query_cache_type=2")]),s._v("的话，那么只有在使用sql_cache后才会使用缓存;")]),s._v(" "),e("p",[s._v("还有mysql里的优先操作"),e("code",[s._v("hight_priority")]),s._v("让mysql优先操作这个语句")]),s._v(" "),e("p",[e("code",[s._v("select high_priority * fromtable_name;")])]),s._v(" "),e("p",[s._v("与其对应的是low_priority;")]),s._v(" "),e("p",[s._v("mysql里还有延时插入"),e("code",[s._v("insert delayed")])]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delayed")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" table_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#当提交之后，mysql返回ok，但不立即插入，而是当mysql有空再插入。假如等待时服务器崩溃，那么所有数据丢失，并且插入不会返回自增id.")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"几个技巧"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#几个技巧"}},[s._v("#")]),s._v(" 几个技巧")]),s._v(" "),e("ol",[e("li",[s._v("强制连接顺序： "),e("code",[s._v("STRAIGHT_JOIN")])])]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" TABLE1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("FIELD1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" TABLE2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("FIELD2 "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" TABLE1 STRAIGHT_JOIN TABLE2 "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" …\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("由上面的SQL语句可知，通过STRAIGHT_JOIN强迫MySQL按TABLE1、TABLE2的顺序连接表。如果你认为按自己的顺序比MySQL推荐的顺序进行连接的效率高的话，就可以通过"),e("code",[s._v("STRAIGHT_JOIN")]),s._v("来确定连接顺序。")]),s._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[s._v("强制使用临时表： "),e("code",[s._v("SQL_BUFFER_RESULT")])])]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" SQL_BUFFER_RESULT "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" TABLE1 "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" …\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("当我们查询的结果集中的数据比较多时，可以通过SQL_BUFFER_RESULT，选项强制将结果集放到临时表中，这样就可以很快地释放MySQL的表锁（这样其它的SQL语句就可以对这些记录进行查询了），并且可以长时间地为客户端提供大记录集。")]),s._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[s._v("分组使用临时表 "),e("code",[s._v("SQL_BIG_RESULT和SQL_SMALL_RESULT")])])]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" SQL_BUFFER_RESULT FIELD1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("COUNT")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" TABLE1 "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" FIELD1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("一般用于分组或"),e("code",[s._v("DISTINCT")]),s._v("关键字，这个选项通知MySQL，如果有必要，就将查询结果放到临时表中，甚至在临时表中进行排序。"),e("code",[s._v("SQL_SMALL_RESULT")]),s._v("比起"),e("code",[s._v("SQL_BIG_RESULT")]),s._v("差不多，很少使用。")])])}),[],!1,null,null,null);e.default=_.exports}}]);