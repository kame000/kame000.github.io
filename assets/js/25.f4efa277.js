(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{432:function(s,a,t){"use strict";t.r(a);var e=t(2),_=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"模块化编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块化编程"}},[s._v("#")]),s._v(" 模块化编程")]),s._v(" "),a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),a("p",[s._v("Python 有时候称为胶水语言，就是因为它有强大的可扩展性，这个扩展性就是用模块实现的。")]),s._v(" "),a("p",[s._v("模块其实就是一个以 "),a("code",[s._v(".py")]),s._v(" 结尾的 Python 文件，这个文件中可以包含变量、函数、类等。")]),s._v(" "),a("p",[s._v("这个模块可以包含实现了一个或者多个功能的代码。")]),s._v(" "),a("p",[s._v("模块可以在其他 Python 文件中使用，可以通过网络进行传播。")]),s._v(" "),a("p",[s._v("这样的话，如果想在你的程序中实现某些功能，其实网络的其他程序猿已经给你写好了，下载下来，安装到自己的环境下，就可以使用了。")]),s._v(" "),a("h2",{attrs:{id:"模块化编程-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块化编程-2"}},[s._v("#")]),s._v(" 模块化编程")]),s._v(" "),a("p",[a("strong",[s._v("模块化编程")]),s._v("是指将大型，笨拙的编程任务分解为单独的，更小的，更易于管理的子任务或"),a("strong",[s._v("模块的过程")]),s._v("。然后可以像构建块一样拼凑单个模块以创建更大的应用程序。")]),s._v(" "),a("p",[s._v("在大型应用程序中"),a("strong",[s._v("模块化")]),s._v("代码有几个优点：")]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("**简单性：**模块通常只关注问题的一小部分，而不是关注当前的整个问题。如果您正在处理单个模块，那么您的头脑中要思考的将有一个较小的问题范围。这使得开发更容易，更不容易出错。")])])]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("**可维护性：**模块通常设计为能够在不同的问题域之间实施逻辑边界。如果以最小化相互依赖性的方式编写模块，则对单个模块的修改将对程序的其他部分产生影响的可能性降低。（您甚至可以在不了解该模块之外的应用程序的情况下对模块进行更改。）这使得许多程序员团队在大型应用程序上协同工作更加可行。")])])]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("**可重用性：**单个模块中定义的功能可以通过应用程序的其他部分轻松地重用。这消除了重新创建重复代码的需要。")])])]),s._v(" "),a("blockquote",[a("ul",[a("li",[a("strong",[s._v("范围："),a("strong",[s._v("模块通常定义一个单独的")]),s._v("命名空间")]),s._v("，这有助于避免程序的不同区域中的变量名之间的冲突。")])])]),s._v(" "),a("h1",{attrs:{id:"一、模块分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、模块分类"}},[s._v("#")]),s._v(" 一、模块分类")]),s._v(" "),a("h2",{attrs:{id:"实现方式分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现方式分类"}},[s._v("#")]),s._v(" 实现方式分类")]),s._v(" "),a("p",[s._v("实际上有两种不同的方法可以在Python中定义"),a("strong",[s._v("模块")]),s._v("：")]),s._v(" "),a("ol",[a("li",[s._v("模块可以用Python本身编写。")]),s._v(" "),a("li",[s._v("模块可以用"),a("strong",[s._v("C")]),s._v("编写并在运行时动态加载，就像"),a("code",[s._v("re")]),s._v("（"),a("strong",[s._v("正则表达式")]),s._v("）模块一样。")]),s._v(" "),a("li",[s._v("一个"),a("strong",[s._v("内置的")]),s._v("模块,本质上已经包含在了 Python 解释器中，像"),a("a",{attrs:{href:"https://docs.python.org/zh-cn/3.7/library/itertools.html",target:"_blank",rel:"noopener noreferrer"}},[a("code",[s._v("itertools")]),s._v("模块"),a("OutboundLink")],1),s._v("\n。")])]),s._v(" "),a("p",[s._v("以上情况下，模块的内容都以相同的方式访问：使用"),a("code",[s._v("import")]),s._v("语句")]),s._v(" "),a("p",[s._v("在这里，重点将主要放在用Python编写的模块上。用Python编写的模块的妙处在于它们的构建极其简单。您需要做的就是创建一个包含合法Python代码的文件，然后为该文件命名并带有 "),a("code",[s._v(".py")]),s._v(" 扩展名即可。")]),s._v(" "),a("h2",{attrs:{id:"归属分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#归属分类"}},[s._v("#")]),s._v(" 归属分类")]),s._v(" "),a("p",[s._v("模块还可以分为")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("内置模块 ，就是 python 解释器中自带的. 如： "),a("code",[s._v("os")]),s._v(" "),a("code",[s._v("re")]),s._v(" "),a("code",[s._v("itertools")])])]),s._v(" "),a("li",[a("p",[s._v("第三方模块， 这些模块需要自己安装，就像是在 Linux 系统中安装软件一样。")])]),s._v(" "),a("li",[a("p",[s._v("自定义模块， 这个就是自己编写的模块。")])])]),s._v(" "),a("h1",{attrs:{id:"二、模块的安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、模块的安装"}},[s._v("#")]),s._v(" 二、模块的安装")]),s._v(" "),a("h2",{attrs:{id:"安装方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装方法"}},[s._v("#")]),s._v(" 安装方法")]),s._v(" "),a("h3",{attrs:{id:"_1-pip3-工具安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-pip3-工具安装"}},[s._v("#")]),s._v(" 1.  "),a("code",[s._v("pip3")]),s._v(" 工具安装")]),s._v(" "),a("p",[s._v("例如下面的示例是安装用于执行远程主机命令的模块 "),a("code",[s._v("paramiko")])]),s._v(" "),a("p",[a("code",[s._v("注意： pip3 是 bash 环境下的命令")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ pip3 install paramiko\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("python2.x 使用 "),a("code",[s._v("pip")]),s._v("\npython3.x 使用 "),a("code",[s._v("pip3")]),s._v("\n当然这也不是固定的，比如你给 "),a("code",[s._v("pip3")]),s._v(" 定义了一个别名 "),a("code",[s._v("pip")])])]),s._v(" "),a("h3",{attrs:{id:"_2-源码安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-源码安装"}},[s._v("#")]),s._v(" 2. 源码安装")]),s._v(" "),a("p",[s._v("源码安装就是，从网络上下载没有封装的 python 文件的源码，之后在本地执行其源码中的 "),a("code",[s._v("setup.py")]),s._v(" 文件进行安装。")]),s._v(" "),a("p",[s._v("模块的源码一般都有一个主目录，主目录中包含了一个到多个子目录和文件。\n但是主目录下一定有一个 "),a("code",[s._v("setup.py")]),s._v(" 的文件，这个是源码安装的入口文件，就是需要执行这个文件并且传入一个  "),a("code",[s._v("install")]),s._v(" 参数进行源码安装。")]),s._v(" "),a("p",[s._v("示例：")]),s._v(" "),a("p",[s._v("a. 下载源码包")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("wget https://files.pythonhosted.org/packages/4a/1b/9b40393630954b54a4182ca65a9cf80b41803108fcae435ffd6af57af5ae/redis-3.0.1.tar.gz\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("b. 解压源码包")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("tar -xf redis-3.0.1.tar.gz\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("进入模块源码的主目录，并安装源码包")])]),s._v(" "),a("p",[a("img",{attrs:{src:"http://img.liuwenqi.com/blog/2020-02-24-153523.png",alt:"千锋云计算杨哥团队@shark"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/11414906-a626a091f7d0681c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/600",alt:"千锋云计算杨哥团队@shark"}})]),s._v(" "),a("blockquote",[a("p",[s._v("上面表示安装成功")])]),s._v(" "),a("h1",{attrs:{id:"三、自定义模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、自定义模块"}},[s._v("#")]),s._v(" 三、自定义模块")]),s._v(" "),a("p",[s._v("有的情况下，是需要自己编写一些模块的，这种就是自定义模块了。")]),s._v(" "),a("p",[s._v("示例:")]),s._v(" "),a("p",[a("code",[s._v("some_mod.py")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("x = 10\n\nli = ['shark', 18]\n\ndef foo():\n    return 30\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h1",{attrs:{id:"四、模块的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、模块的使用"}},[s._v("#")]),s._v(" 四、模块的使用")]),s._v(" "),a("p",[s._v("使用模块需要先导入模块名。")]),s._v(" "),a("p",[s._v("模块名就是把 "),a("code",[s._v(".py")]),s._v(" 去掉后的文件名。比如 "),a("code",[s._v("some_mod.py")]),s._v(" 的模块名就是 "),a("code",[s._v("some_mod")])]),s._v(" "),a("h2",{attrs:{id:"_1-导入模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-导入模块"}},[s._v("#")]),s._v(" 1. 导入模块")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import  some_mod\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"_2-使用模块中的对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用模块中的对象"}},[s._v("#")]),s._v(" 2. 使用模块中的对象")]),s._v(" "),a("p",[s._v("要想使用模块中的变量名或者函数名等，只需要使用 "),a("code",[s._v("模块名.变量名")]),s._v(" 的方式即可。")]),s._v(" "),a("p",[s._v("例如，下面是使用的了 "),a("code",[s._v("some_mod")]),s._v(" 模块中的 "),a("code",[s._v("foo")]),s._v(" 函数。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v("  some_mod\n\nsome_mod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"_3-更多模块导入的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-更多模块导入的方式"}},[s._v("#")]),s._v(" 3. 更多模块导入的方式")]),s._v(" "),a("p",[s._v("a.  从模块中导入其中的一个对象")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from some_mod  import  x\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("b. 从模块中导入多个对象")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from some_mod import x, foo\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("c. 从模块中导入全部的对象, 不建议这么做, 应该视使用模块中的对象的情况而定")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from some_mod import *\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"导入模块时模块的代码会自动被执行一次-在一个程序中多次导入同一个模块-此模块的代码仅会运行一次。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导入模块时模块的代码会自动被执行一次-在一个程序中多次导入同一个模块-此模块的代码仅会运行一次。"}},[s._v("#")]),s._v(" 导入模块时模块的代码会自动被执行一次，在一个程序中多次导入同一个模块，此模块的代码仅会运行一次。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('[root@kube-master py3]# cat some_mod.py\nprint("hello shark")\n[root@kube-master py3]# cat t.py\nimport some_mod\nimport some_mod\n[root@kube-master py3]# python t.py\nhello shark\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h1",{attrs:{id:"二、包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、包"}},[s._v("#")]),s._v(" 二、包")]),s._v(" "),a("p",[s._v("包就是包含了一个 "),a("code",[s._v("__init__.py")]),s._v(" 文件的文件夹，这个文件夹下可以有更多的目录或文件。就是说，包里可以用子包或单个 "),a("code",[s._v(".py")]),s._v(" 的文件。")]),s._v(" "),a("p",[s._v("其实包也是模块，就是说包和单一的 "),a("code",[s._v(".py")]),s._v(" 文件统称为模块。")]),s._v(" "),a("h2",{attrs:{id:"包的目录结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包的目录结构"}},[s._v("#")]),s._v(" 包的目录结构")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://img.liuwenqi.com/blog/2020-02-24-153530.png",alt:"千锋云计算杨哥团队@shark"}})]),s._v(" "),a("h2",{attrs:{id:"文件-init-py"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件-init-py"}},[s._v("#")]),s._v(" 文件 "),a("code",[s._v("__init__.py")])]),s._v(" "),a("p",[a("code",[s._v("__init__.py")]),s._v(" 文件，在 Python3.x 中可以没有，但是在 Python2.x 中必须有。")]),s._v(" "),a("p",[s._v("文件中可以有代码，也可以是个空文件，但是文件名不能是其他的。")]),s._v(" "),a("p",[s._v("到导入包的时候，此文件假如存在，会以此文件去见包的名称空间。")]),s._v(" "),a("p",[s._v("也就是说，导入如包的时候，只要在 "),a("code",[s._v("__init__.py")]),s._v(" 文件中的名称才可以生效。否则，即使是一个模块在包目录下面也不会被导入到内存中，也就不会生效。")]),s._v(" "),a("h2",{attrs:{id:"使用包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用包"}},[s._v("#")]),s._v(" 使用包")]),s._v(" "),a("p",[s._v("示例包目录机构")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://img.liuwenqi.com/blog/2020-02-24-153535.png",alt:""}})]),s._v(" "),a("p",[s._v("使用包也需要导入")]),s._v(" "),a("p",[s._v("a. 单独导入包")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import package  # 注意这样不会导入其下面的模块和子包\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("b. 从包中导入下面的模块")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from package import t\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("c. 从包中导入下面的子包，注意这不会导入子包下面的任何模块")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from package import subpkg\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("d. 从包的子包中导入子包的模块")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from package.subpkg import som_mod\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("e. 从包或子包的模块中导入具体的对象")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from package.t  import foo\n\nfrom package.subpkg.som_mod import x\n\nfrom package.t  import x  as y   # 把 x 导入后起个别名 y\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("strong",[a("code",[s._v("记住一点：不论是导入包还是模块，从左向右的顺序来说，最后一个点儿的左边一定是一个包名，而不能是一个模块名")])])]),s._v(" "),a("p",[s._v("下面是错误的")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import package.t.foo\nfrom package.subpkg import som_mod.x\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h1",{attrs:{id:"三模块的内置变量-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三模块的内置变量-name"}},[s._v("#")]),s._v(" 三模块的内置变量 "),a("code",[s._v("__name__")])]),s._v(" "),a("p",[s._v("每个 "),a("code",[s._v(".py")]),s._v(" 文件都有一个变量名 "),a("code",[s._v("__name__")]),s._v("， 这个变量名的值会根据这个文件的用途不同而随之变化。")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("当文件作为模块被其他文件使用时，"),a("code",[s._v("__name__")]),s._v(" 的值是这个文件的模块名")])]),s._v(" "),a("li",[a("p",[s._v("当文件作为脚本（就是作为可执行文件）使用时，"),a("code",[s._v("__name__")]),s._v(" 的值是字符串类型的 "),a("code",[s._v("'__main__'")])])])]),s._v(" "),a("p",[s._v("通常你会看到一些 Python 脚本中会有类似下面的代码：")]),s._v(" "),a("p",[a("code",[s._v("some_script.py")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("def foo():\n    pass\n\ndef func():\n    pass\n\ndef main():\n    foo()\n    func()\n\nif __name__ == '__main__':\n       main()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("使用这个脚本")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("python3 some_script.py\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("这样执行这个脚本的话，其内置的 "),a("code",[s._v("__name__")]),s._v(" 变量的值就是字符串的 "),a("code",[s._v("'__main__'")]),s._v("。\n这样的话， "),a("code",[s._v("if")]),s._v(" 的判断添加就会达成，从而其语句下面的代码就会执行， "),a("code",[s._v("main()")]),s._v(" 函数就会被调用 。")])]),s._v(" "),a("h1",{attrs:{id:"模块名包名的搜索路径-扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块名包名的搜索路径-扩展"}},[s._v("#")]),s._v(" 模块名包名的搜索路径（扩展）")]),s._v(" "),a("p",[s._v("这个就像是在 Linux 系统中，当执行一个命令时候，系统会查找这个命令的二进制文件一样。Linux 系统是从环境变量 "),a("code",[s._v("PATH")]),s._v(" 中查找。")]),s._v(" "),a("h2",{attrs:{id:"查找顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查找顺序"}},[s._v("#")]),s._v(" 查找顺序")]),s._v(" "),a("p",[s._v("当你导入模块或者包的时候, 查找模块或包的顺序：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("系统会从内存中查找，看是否之前已经导入过此模块。")])]),s._v(" "),a("li",[a("p",[s._v("假如第一次导入，内存中就不会存在，这时再从当前目录下查找。")])]),s._v(" "),a("li",[a("p",[s._v("最再从"),a("code",[s._v("sys.path")]),s._v(" 输出的值中的路径里查找模块名或者包名。")])])]),s._v(" "),a("blockquote",[a("p",[s._v("都找不到，就会报错，并且整个程序会退出")])]),s._v(" "),a("p",[a("img",{attrs:{src:"http://img.liuwenqi.com/blog/2020-02-24-154032.png",alt:""}})]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import sys\n\nprint(sys.path)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("code",[s._v("sys.path")]),s._v(" 输出的值是一个 Python 的列表，这个列表我们可以对其修改的。")]),s._v(" "),a("p",[s._v("比如我们可以把某个文件的路径添加到此列表中，通常会这么做。")]),s._v(" "),a("p",[a("code",[s._v("run.py")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import os,sys\n\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\n\nsys.path.insert(0, BASE_DIR)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h1",{attrs:{id:"相对导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相对导入"}},[s._v("#")]),s._v(" 相对导入")]),s._v(" "),a("p",[s._v("相对导入就是从当前目录下导入模块")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from  . import som_mod\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])}),[],!1,null,null,null);a.default=_.exports}}]);