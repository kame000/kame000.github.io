(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{546:function(e,v,a){"use strict";a.r(v);var l=a(2),_=Object(l.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h2",{attrs:{id:"zabbix-生产事故"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#zabbix-生产事故"}},[e._v("#")]),e._v(" Zabbix 生产事故")]),e._v(" "),v("h3",{attrs:{id:"zabbix-出现过哪些问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#zabbix-出现过哪些问题"}},[e._v("#")]),e._v(" Zabbix 出现过哪些问题")]),e._v(" "),v("ol",[v("li",[v("p",[e._v("收到 Server端IO过高报警、agent无法收到数据，agent掉线")]),e._v(" "),v("ol",[v("li",[v("p",[e._v("问题表现：Zabbix server IO过高")])]),e._v(" "),v("li",[v("p",[e._v("问题查找：Zabbix-server 和mysql在同一台服务器，zabbix 默认会有每个小时delete history history_uint   导致IO负载过高")])]),e._v(" "),v("li",[v("p",[e._v("解决问题方案：")]),e._v(" "),v("ol",[v("li",[e._v("Zabbix-server 修改配置文件")])]),e._v(" "),v("div",{staticClass:"language-yml line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-yml"}},[v("code",[e._v("HousekeepingFrequency=1  //历史数据清理时长，默认1小时，\nMaxHousekeeperDelete=500 //每次删除历史数据的条数，默认5000调小该值"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("减少IO 慢查询\n")])]),e._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[e._v("1")]),v("br"),v("span",{staticClass:"line-number"},[e._v("2")]),v("br")])]),v("ol",{attrs:{start:"2"}},[v("li",[e._v("Zabbix-server中的mysql分离到其他服务器")])])])])]),e._v(" "),v("li",[v("p",[e._v("Agent 监控项过多，优化模板，把不用的监控指标剔除")]),e._v(" "),v("ul",[v("li",[e._v("修改agent配置文件   60s")]),e._v(" "),v("li",[e._v("item 自定修改某些监控项 时间间隔")])])]),e._v(" "),v("li",[v("p",[e._v("误报警？zabbix-proxy 挂了？  zabbix代理端的所有agent都会产生报警")]),e._v(" "),v("ol",[v("li",[v("p",[e._v("大量报警，发现所有报警都来之一个proxy代理端")])]),e._v(" "),v("li",[v("p",[e._v("处理问题：")]),e._v(" "),v("ol",[v("li",[e._v("关闭报警")]),e._v(" "),v("li",[e._v("zabbix-server  大量队列信息，杀死队列")]),e._v(" "),v("li",[e._v("触发器，如果检测到proxy有问题，shell脚本处理上面流程信息。")])])])])]),e._v(" "),v("li",[v("p",[e._v("DDL(自动发现）")]),e._v(" "),v("blockquote",[v("p",[e._v("应用：40台服务器，主机组》添加基础模板》--- 触发器")])])]),e._v(" "),v("li",[v("p",[e._v("每一s监控一次数据，自己用Python，最好方式用go写，根据需求")]),e._v(" "),v("p",[e._v("如何是500台或者1000台以上？\n参考方案：")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("prometheus")]),e._v(" + "),v("code",[e._v("grafana")]),e._v(" "),v("ul",[v("li",[e._v("开发语言 go")]),e._v(" "),v("li",[e._v("随着k8s诞生的。k8s落地  肯定\n"),v("ul",[v("li",[e._v("node-exporter")]),e._v(" "),v("li",[e._v("cadvisor")])])])])]),e._v(" "),v("li",[v("code",[e._v("open-falcon + Grafana")]),e._v(" "),v("ul",[v("li",[e._v("底层go")]),e._v(" "),v("li",[e._v("dashboard  Python+django")]),e._v(" "),v("li",[e._v("模块化 每个模块进行分布式")])])])])])])])}),[],!1,null,null,null);v.default=_.exports}}]);